<!--  -->
<template>
  <block>
    <scroll-view
      scroll-y
      class="DrawerPage {{!drawerHidden?'show':''}}"
    >
      <view
        class="cu-custom"
        style="height:{{CustomBar}}px;"
      >
        <view
          class="cu-bar fixed bg-gradual-black"
          style="height:{{CustomBar}}px;padding-top:{{StatusBar}}px;"
        >
          <view
            class="cu-avatar round"
            style="background-image:url('{{authorInfo.avatarUrl}}');"
            bindtap="showDrawer"
          ></view>
          <view
            class="content text-green"
            style="top:{{StatusBar}}px;"
          >指尖魔法屋</view>
        </view>
      </view>
      <view class="cu-card case">
        <view
          class="loading text-center bg-white margin"
          wx:if="{{isloading}}"
        >
          <image
            class="loading__icon"
            src="https://image.weilanwl.com/gif/loading-2.gif"
          ></image>
        </view>
        <view
          wx:for="{{postData}}"
          wx:key
          class="cu-item shadow animation-{{drawerHidden?'slide-bottom':'slide-top animation-reverse'}}"
        >
          <view
            @tap="seePost"
            data-cid="{{item.cid}}"
          >
            <view class="image">
              <image
                src="{{item.thumb[0].str_value}}"
                mode="widthFix"
              ></image>
              <view class="cu-tag bg-blue">置顶</view>
              <view class="cu-bar bg-shadeBottom">{{ item.title }}</view>
            </view>
            <view class="cu-list menu menu-avatar">
              <view class="cu-item">
                <view
                  class="cu-avatar round lg"
                  style="background-image:url('{{authorInfo.avatarUrl}}');"
                ></view>
                <view class="content flex-sub">
                  <view class="text-green">{{ authorInfo.screenName }}</view>
                  <view class="text-gray text-sm flex justify-between">
                    {{ item.createdTime }}
                    <view class="text-gray text-sm">
                      <text class="icon-attentionfill"></text>
                      {{ item.views }}
                      <text class="icon-appreciatefill"></text>
                      {{ item.likes }}
                      <text class="icon-messagefill"></text>
                      {{ item.commentsNum }}
                    </view>
                  </view>
                </view>
              </view>
            </view>
          </view>
        </view>
      </view>
      <!-- 分页栏 -->
      <view class="padding text-center">
        <button
          class="cu-btn sm bg-white margin-xs"
          @tap="navPage"
          data-page="1"
        >首页</button>
        <button
          @tap="navPage"
          data-page="{{ curPage*1 - 1*1}}"
          class="cu-btn sm bg-white margin-xs"
        >上一页</button>
        <button
          @tap="navPage"
          data-page="{{curPage*1 + 1*1}}"
          class="cu-btn sm bg-white margin-xs"
        >下一页</button>
        <button
          class="cu-btn sm bg-white margin-xs"
          @tap="navPage"
          data-page="{{pageNum}}"
        >末页</button>
      </view>
      <view
        class="bg-black"
        style="height:300rpx;"
      ></view>
    </scroll-view>
    <view
      class="DrawerClose {{!drawerHidden?'show':''}}"
      bindtap="hideDrawer"
    ><text class="icon-pullright"></text></view>
    <scroll-view
      scroll-y
      class="DrawerWindow {{!drawerHidden?'show':''}}"
    >
      <view class="about shadow-lg radius animation-{{!drawerHidden?'slide-left':''}}">
        <view class="bg-img">
          <image
            mode="aspectFill"
            src="https://www.thinkmoon.cn/usr/themes/armx/img/about_bg.png"
          ></image>
        </view>
        <view class="avatar-view">
          <image
            class="avatar"
            src="{{authorInfo.avatarUrl}}"
          ></image>
        </view>
        <view class="intro shadow grid col-4 padding-sm solid-bottom">
          <view class="solid-left">
            文章
            <view>42</view>
          </view>
          <view class="solid-left">
            留言
            <view>42</view>
          </view>
          <view class="solid-left">
            分类
            <view>42</view>
          </view>
          <view>
            标签
            <view>42</view>
          </view>
        </view>
      </view>
    </scroll-view>
  </block>
</template>

<script>
import Page from '../common/page'
import { getRecentPost, getPageNum } from '../utils/api'
import moment from 'moment'
import 'moment/locale/zh-cn'
moment.locale('zh-cn')

export default class Index extends Page {
  config = {};

  data = {
    toView: 'topdf',
    pageNum: 0,
    curPage: 1,
    drawerHidden: true,
    authorInfo: {},
    postData: [],
    StatusBar: 0,
    CustomBar: 0,
    Custom: 0,
    isloading: true
  };

  methods = {
    seePost(e) {
      wx.navigateTo({
        url: '../towxml/post?cid=' + e.currentTarget.dataset.cid
      })
    },
    showDrawer(e) {
      this.drawerHidden = false
    },
    hideDrawer(e) {
      this.drawerHidden = true
    }
  };
  navPage(e) {
    let data = e.currentTarget.dataset.page
    console.log('navTo', data)
    if (data <= 0 || data > this.data.pageNum) return
    this.isloading = true
    this.curPage = data
    this.drawerHidden = this.initPost(data)
  }
  async initPost(pageOffset) {
    let res = await getRecentPost({ page: pageOffset })
    let resNum = await getPageNum()
    this.pageNum = resNum.data.data
    wx.setStorage({
      key: 'pageNum',
      data: resNum.data.data
    })
    let data = res.data.data
    for (let i = 0; i < data.length; i++) {
      data[i].createdTime = moment.unix(data[i].created).fromNow()
    }
    console.log(data)
    this.postData = false
    this.$apply()
    this.isloading = false
    this.postData = data
    console.log(this.postData)
    this.$apply()
  }
  onLoad(options) {
    const _this = this
    if (options.curPage) {
      this.initPost(options.curPage)
    } else {
      this.initPost(1)
    }
    const app = this.$parent
    this.StatusBar = app.globalData.StatusBar
    this.CustomBar = app.globalData.CustomBar
    this.Custom = app.globalData.Custom
    var time = 0
    var refreshId = setInterval(() => {
      if (time > 20 || app.globalData.authorInfo.avatarUrl) {
        _this.authorInfo = app.globalData.authorInfo
        _this.$apply()
        clearInterval(refreshId)
      }
      console.log('run', time++)
    }, 200)
  }
}
</script>
<style lang="less">
// 博客内容的统计
.intro {
  width: 506rpx;
  height: 112rpx;
  position: relative;
  color: #888;
  background-color: #656565;
}
// avatar的view容器
.avatar-view {
  height: 110rpx;
}
// 头像
.avatar {
  width: 200rpx;
  height: 200rpx;
  border-radius: 50%;
  top: -100rpx;
  margin: auto;
  border: 5rpx #eee solid;
}
.bg-img image {
  width: 506rpx;
  height: 200rpx;
  //background-image:url('https://www.thinkmoon.cn/usr/themes/armx/img/about_bg.png') ;
}
.about {
  margin: auto;
  text-align: center;
  width: 506rpx;
  background-color: #545454;
  margin-top: 80%;
}
page {
  background-image: var(--gradualBlack);
  width: 100vw;
  overflow: hidden;
}

.DrawerPage {
  position: fixed;
  width: 100vw;
  height: 100vh;
  left: 0vw;
  background-color: #f1f1f1;
  transition: all 0.6s;
}

.DrawerPage.show {
  transform: scale(0.9, 0.9);
  left: 85vw;
  box-shadow: 0 0 60rpx rgba(0, 0, 0, 0.2);
  transform-origin: 0;
}

.DrawerWindow {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  width: 85vw;
  height: 100vh;
  left: 0;
  top: 0;
  transform: scale(0.9, 0.9) translateX(-100%);
  opacity: 0;
  pointer-events: none;
  transition: all 0.6s;
}

.DrawerWindow.show {
  transform: scale(1, 1) translateX(0%);
  opacity: 1;
  pointer-events: all;
}

.DrawerClose {
  position: absolute;
  width: 40vw;
  height: 100vh;
  right: 0;
  top: 0;
  color: transparent;
  padding-bottom: 30rpx;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  background-image: linear-gradient(
    90deg,
    rgba(0, 0, 0, 0.01),
    rgba(0, 0, 0, 0.6)
  );
  letter-spacing: 5px;
  font-size: 50rpx;
  opacity: 0;
  pointer-events: none;
  transition: all 0.6s;
}

.DrawerClose.show {
  opacity: 1;
  pointer-events: all;
  width: 15vw;
  color: #fff;
}

.DrawerPage .cu-bar.tabbar .action button.icon {
  width: 64rpx;
  height: 64rpx;
  line-height: 64rpx;
  margin: 0;
  display: inline-block;
}

.DrawerPage .cu-bar.tabbar .action .cu-avatar {
  margin: 0;
}

.DrawerPage .nav {
  flex: 1;
}

.DrawerPage .nav .cu-item.cur {
  border-bottom: 0;
  position: relative;
}

.DrawerPage .nav .cu-item.cur::after {
  content: "";
  width: 10rpx;
  height: 10rpx;
  background-color: currentColor;
  position: absolute;
  bottom: 10rpx;
  border-radius: 10rpx;
  left: 0;
  right: 0;
  margin: auto;
}

.DrawerPage .cu-bar.tabbar .action {
  flex: initial;
}
</style>
