<!--  -->
<template>
  <block>
    <view class="DrawerPage {{drawerHidden?'':'show'}}">
      <view
        class="cu-custom"
        style="height:{{CustomBar}}px;"
      >
        <view
          class="cu-bar fixed bg-gradual-black"
          style="height:{{CustomBar}}px;padding-top:{{StatusBar}}px;"
        >
          <view
            class="cu-avatar round animation-{{rotate}} animation-reverse"
            style="background-image:url('{{authorInfo.avatarUrl}}');"
            bindtap="showDrawer"
          ></view>
          <view
            class='content'
            style='top:{{StatusBar}}px;'
          ></view>
        </view>
      </view>
      <view class="cu-card case">
        <view
          wx:for="{{postData}}"
          wx:key
          class="cu-item shadow animation-{{animation}} {{!drawerHidden?'animation-reverse':''}}"
        >
          <view hidden="{{postHidden}}" @tap="seePost" data-cid="{{item.cid}}">
            <view class='image'>
              <image
                src="{{item.thumb[0].str_value}}"
                mode="widthFix"
              ></image>
              <view class="cu-tag bg-blue">置顶</view>
              <view class='cu-bar bg-shadeBottom'>{{item.title}}</view>
            </view>
            <view class="cu-list menu menu-avatar">
              <view class="cu-item">
                <view
                  class="cu-avatar round lg"
                  style="background-image:url('{{authorInfo.avatarUrl}}');"
                ></view>
                <view class='content flex-sub'>
                  <view class='text-grey'>{{authorInfo.screenName}}</view>
                  <view class='text-gray text-sm flex justify-between'>
                    {{item.created}}
                    <view class="text-gray text-sm">
                      <text class="icon-attentionfill"></text>{{item.views}}
                      <text class="icon-appreciatefill"></text>{{item.likes}}
                      <text class="icon-messagefill"></text>{{item.commentsNum}}
                    </view>
                  </view>
                </view>
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>
    <view
      class="DrawerClose {{!drawerHidden?'show':''}}"
      bindtap='hideDrawer'
    >
      <text class='icon-pullright'></text>
    </view>
    <view class="DrawerWindow bg-gradual-black {{!drawerHidden?'show':''}}">
      <view class="about shadow-lg radius">
        <view class="bg-img">
          <image
            mode="aspectFill"
            src="https://www.thinkmoon.cn/usr/themes/armx/img/about_bg.png"
          ></image>
        </view>
        <view class="avatar-view animation-{{rotate}}">
          <image
            class="avatar"
            src="{{authorInfo.avatarUrl}}"
          ></image>
        </view>
        <view class="intro shadow grid col-4 padding-sm solid-bottom">
          <view class="solid-left">文章<view>42</view>
          </view>
          <view class="solid-left">留言<view>42</view>
          </view>
          <view class="solid-left">分类<view>42</view>
          </view>
          <view>标签<view>42</view>
          </view>
        </view>
      </view>
    </view>
  </block>
</template>

<script>
import Page from '../common/page'
import { getRecentPost } from '../utils/api'

export default class Index extends Page {
  config = {};

  data = {
    postHidden: false,
    rotate: '',
    animation: '',
    drawerHidden: true,
    authorInfo: {},
    postData: [],
    StatusBar: 0,
    CustomBar: 0,
    Custom: 0
  };

  methods = {
    seePost(e) {
      wx.navigateTo({
        url: '../towxml/post?cid=' + e.currentTarget.dataset.cid
      })
    },
    showDrawer(e) {
      const _this = this
      this.drawerHidden = false
      this.animation = 'slide-top'
      this.rotate = 'rotate'
      setTimeout(() => {
        _this.postHidden = true
        _this.$apply()
      }, 1200)
    },
    hideDrawer(e) {
      this.postHidden = false
      this.drawerHidden = true
      this.animation = 'slide-bottom'
      this.rotate = 'rotate-reverse'
    }
  };
  async initPost() {
    let res = await getRecentPost({ pageSize: 7 })
    console.log(res.data.data)
    this.postData = res.data.data
    this.$apply()
  }
  onLoad() {
    const _this = this
    this.initPost()
    const app = this.$parent
    this.StatusBar = app.globalData.StatusBar
    this.CustomBar = app.globalData.CustomBar
    this.Custom = app.globalData.Custom
    var time = 0
    var refreshId = setInterval(() => {
      if (time > 20 || app.globalData.authorInfo.avatarUrl) {
        _this.authorInfo = app.globalData.authorInfo
        _this.$apply()
        clearInterval(refreshId)
      }
      console.log('run', time++)
    }, 200)
  }
}
</script>
<style lang='less'>
// CSS动画
[class*=animation-] {
    animation-duration: 1s;
    animation-timing-function: ease-out;
    animation-fill-mode: both
}
.animation-rotate {
    animation-name: slide-rotate
}
@keyframes slide-rotate {
  0% {
        opacity: 0;
    }
}
.animation-rotate-reserve {
    animation-name: slide-rotate-reserve
}
@keyframes slide-rotate-reserve {
  0% {
        opacity: 0;
        transform: rotate(180deg)
    }

    100% {
        opacity: 1;
        transform: translateY(0)
    }
}

.animation-slide-top {
    animation-name: slide-top
}

.animation-slide-bottom {
    animation-name: slide-bottom
}

.animation-reverse {
    animation-direction: reverse
}

@keyframes slide-top {
    0% {
        opacity: 0;
        transform: translateY(-100%)
    }

    100% {
        opacity: 1;
        transform: translateY(0)
    }
}

@keyframes slide-bottom {
    0% {
        opacity: 0;
        transform: translateY(-100%)
    }

    100% {
        opacity: 1;
        transform: translateY(0)
    }
}

// 博客内容的统计
.intro {
  width: 506rpx;
  height: 112rpx;
  position: relative;
  color: #888;
  background-color: #656565;
}
// avatar的view容器
.avatar-view {
  height: 110rpx;
}
// 头像
.avatar {
  width: 200rpx;
  height: 200rpx;
  border-radius: 50%;
  top: -100rpx;
  margin: auto;
  border: 5rpx #eee solid;
}
.bg-img image {
  width: 506rpx;
  height: 200rpx;
  //background-image:url('https://www.thinkmoon.cn/usr/themes/armx/img/about_bg.png') ;
}
.about {
  text-align: center;
  width: 506rpx;
  background-color: #545454;
}
page {
  background-color: #2e3131;
  background-size: 100%;
}
.bg {
  background-color: #545454;
}
.DrawerPage {
  position: absolute;
  width: 100vw;
  left: 0vw;
  transition: all 0.6s;
}

.DrawerPage.show {
  transform: scale(0.9, 0.9);
  left: 85vw;
  box-shadow: 0 0 60rpx rgba(0, 0, 0, 0.2);
  transform-origin: 0;
}

.DrawerWindow {
  position: fixed;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  width: 85vw;
  height: 100vh;
  left: 0;
  top: 0;
  transform: scale(0.9, 0.9) translateX(-100%);
  opacity: 0;
  pointer-events: none;
  transition: all 0.6s;
}

.DrawerWindow.show {
  transform: scale(1, 1) translateX(0%);
  opacity: 1;
  pointer-events: all;
}

.DrawerClose {
  position: absolute;
  width: 40vw;
  height: 100vh;
  right: 0;
  top: 0;
  color: transparent;
  padding-bottom: 30rpx;
  display: flex;
  align-items: flex-end;
  justify-content: center;
  background-image: linear-gradient(
    90deg,
    rgba(0, 0, 0, 0.01),
    rgba(0, 0, 0, 0.6)
  );
  letter-spacing: 5px;
  font-size: 50rpx;
  opacity: 0;
  pointer-events: none;
  transition: all 0.6s;
}
.DrawerClose.show {
  opacity: 1;
  pointer-events: all;
  width: 15vw;
  color: #fff;
}

.DrawerPage .cu-bar.tabbar .action button.icon {
  width: 64rpx;
  height: 64rpx;
  line-height: 64rpx;
  margin: 0;
  display: inline-block;
}

.DrawerPage .cu-bar.tabbar .action .cu-avatar {
  margin: 0;
}

.DrawerPage .nav {
  flex: 1;
}

.DrawerPage .nav .cu-item.cur {
  border-bottom: 0;
  position: relative;
}

.DrawerPage .nav .cu-item.cur::after {
  content: "";
  width: 10rpx;
  height: 10rpx;
  background-color: currentColor;
  position: absolute;
  bottom: 10rpx;
  border-radius: 10rpx;
  left: 0;
  right: 0;
  margin: auto;
}

.DrawerPage .cu-bar.tabbar .action {
  flex: initial;
}
</style>
